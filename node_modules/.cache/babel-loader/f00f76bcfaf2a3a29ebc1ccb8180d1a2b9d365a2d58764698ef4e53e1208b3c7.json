{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lexxd\\\\my-text-components\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport TextComponent from './TextComponent'; // Убедитесь, что путь правильный\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/text');\n        const json = await response.json();\n        setData(json);\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(TextComponent, {\n      header: item.header,\n      options: item.options,\n      text: item.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TextComponent","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","response","fetch","json","error","console","children","map","item","index","header","options","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lexxd/my-text-components/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport TextComponent from './TextComponent'; // Убедитесь, что путь правильный\n\nconst App = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/text');\n        const json = await response.json();\n        setData(json);\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {data.map((item, index) => (\n        <TextComponent\n          key={index}\n          header={item.header}\n          options={item.options}\n          text={item.text}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCJ,OAAO,CAACI,IAAI,CAAC;MACf,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,EACGR,IAAI,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBd,OAAA,CAACF,aAAa;MAEZiB,MAAM,EAAEF,IAAI,CAACE,MAAO;MACpBC,OAAO,EAAEH,IAAI,CAACG,OAAQ;MACtBC,IAAI,EAAEJ,IAAI,CAACI;IAAK,GAHXH,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7BID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}